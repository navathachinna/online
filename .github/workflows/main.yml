name: Deploy CloudFormation Stack

on:
  push:
    branches:
      - main  # Trigger on push to the main branch (or adjust as needed)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout repository
      uses: actions/checkout@master

    # Step 2: Set up AWS credentials using GitHub secrets
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Adjust to your region

    # Step 3: Validate CloudFormation template (Optional but recommended)
    - name: Validate CloudFormation template
      run: |
        aws cloudformation validate-template --template-body file://cloudformation-template.yaml

    # Step 4: Deploy or update CloudFormation stack
    - name: Deploy CloudFormation Stack
      run: |
        STACK_NAME="MyCloudFormationStack"
        TEMPLATE_BODY="file://cloudformation-template.yaml"

        # Check if stack exists
        if aws cloudformation describe-stacks --stack-name $STACK_NAME; then
          echo "Stack exists, updating..."
          aws cloudformation update-stack \
            --stack-name $STACK_NAME \
            --template-body $TEMPLATE_BODY \
            --capabilities CAPABILITY_IAM
        else
          echo "Stack does not exist, creating..."
          aws cloudformation create-stack \
            --stack-name $STACK_NAME \
            --template-body $TEMPLATE_BODY \
            --capabilities CAPABILITY_IAM
        fi

    # Step 5: Wait for stack creation/update to complete (optional)
    - name: Wait for CloudFormation stack update/creation
      run: |
        aws cloudformation wait stack-update-complete --stack-name $STACK_NAME || aws cloudformation wait stack-create-complete --stack-name $STACK_NAME

